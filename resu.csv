Ticket ID,Test Case Title,Description,Test Steps,Expected Result,Actual Result
50,Verify data integrity for a ticket with multiple updates,"Validate that ticket 50, which was updated after creation, has correct timestamps and related conversation and attachment data.",1. SELECT * FROM ticket_details WHERE ticket_id = 50;2. SELECT * FROM conversation_details WHERE ticket_id = 50;3. SELECT * FROM attachment_redact_info WHERE ticket_id = 50;,1. ticket_details shows created_at (14:56:09) is earlier than updated_at (15:03:37).2. conversation_details for ticket 50 has conversation_id 14000020106785.3. attachment_redact_info shows two entries with state = 'DOCUMENT_CLEANUP_DONE'.,"Data Matched:• ticket_details: created_at = 2025-08-28 14:56:09, updated_at = 2025-08-28 15:03:37.• conversation_details: conversation_id = 14000020106785.• attachment_redact_info: Two records found, both with state = DOCUMENT_CLEANUP_DONE."
70,Verify ticket without attachment,"Check that ticket 70, marked with is_attachment_present = 0, has no corresponding entries in attachment-related tables.",1. SELECT is_attachment_present FROM ticket_details WHERE ticket_id = 70;2. SELECT COUNT(*) FROM attachment_redact_info WHERE ticket_id = 70;3. SELECT COUNT(*) FROM redaction_request_log WHERE ticket_id = 70;,1. The query on ticket_details returns is_attachment_present = 0.2. Both COUNT(*) queries return 0.,Verified No Attachments:• ticket_details.is_attachment_present: 0.• attachment_redact_info count: 0.• redaction_request_log count: 0.
100,Verify ticket with invalid source data,"Investigate ticket 100, which has source = 100. This appears to be an invalid or placeholder value.",1. SELECT * FROM ticket_details WHERE ticket_id = 100;2. Check if the application handles or flags tickets with a source ID of 100.,The database correctly stores source = 100. The application should handle this gracefully.,Verified Invalid Data Handling:• ticket_details row for ticket_id=100 correctly shows source = 100 and status = 11.• The application UI displays the source as 'Unknown' and does not crash.
745,Create a new ticket and verify log trail,Simulate the creation of a new ticket (ticket_id = 745) and ensure it follows the same pattern as ticket_id = 744.,1. INSERT into ticket_details (ticket_id = 745).2. INSERT into conversation_details.3. INSERT into attachment_redact_info.4. INSERT into redaction_request_log.,"Each table should contain a new, correctly linked entry for ticket_id = 745.",Records Created:• Ticket created at 2025-09-08 20:05:15.• Conversation 14000020128001 created.• Attachment state is DOCUMENT_CLEANUP_PENDING.• Redaction log created with response_code: 200.
90,Verify optimistic locking with version increment,"Ticket 90 has version = 1, indicating it has been updated. This test validates the versioning mechanism.",1. Note updated_at (16:23:59) and version (1) for ticket_id = 90.2. UPDATE ticket_details SET priority = 3 WHERE ticket_id = 90;,"The row for ticket 90 shows priority as 3. The version column increments to 2, and the updated_at timestamp is updated.",Update Successful:• priority changed from 2 to 3.• version incremented from 1 to 2.• updated_at changed from 2025-09-02 16:23:59 to 2025-09-08 20:05:40.
650,Verify redaction state transition,Simulate the redaction process completing for an attachment.,1. UPDATE attachment_redact_info SET state = 'DOCUMENT_CLEANUP_PENDING' WHERE ticket_id = 650;2. UPDATE attachment_redact_info SET state = 'REDACTION_SUCCESSFUL' WHERE ticket_id = 650;,The state column is updated correctly at each step.,State Transition Verified:• Step 1: state changed to DOCUMENT_CLEANUP_PENDING.• Step 2: state changed to REDACTION_SUCCESSFUL.• updated_at timestamp reflects the latest change.
650,Mark a conversation as private,Test updating an existing conversation to be private.,1. Note is_private is 1 for conversation_id = 14000020125000.2. UPDATE conversation_details SET is_private = 0 WHERE conversation_id = 14000020125000;,"The is_private flag is updated to 0, and the updated_at timestamp changes.",Flag Toggled:• is_private for conversation_id = 14000020125000 is now 0.• updated_at changed from 2025-09-08 16:00:00 to 2025-09-08 20:06:15.
135,Simulate soft-deleting a ticket,Test the soft-delete functionality by updating the is_deleted flag for a recent ticket.,1. Check is_deleted for ticket_id = 135 (is 0).2. UPDATE ticket_details SET is_deleted = 1 WHERE ticket_id = 135;,The is_deleted flag for ticket 135 is now 1. Related records in other tables are not deleted.,Soft Delete Successful:• ticket_details: is_deleted is 1 for ticket_id = 135.• conversation_details: Record for conversation_id = 14000020121230 still exists with is_deleted = 0.
130,Simulate soft-deleting a conversation,Test deleting a single conversation from a ticket without deleting the ticket itself.,1. Check is_deleted for conversation_id = 14000020120251 (is 0).2. UPDATE conversation_details SET is_deleted = 1 WHERE conversation_id = 14000020120251;,The is_deleted flag for the conversation is now 1. The parent ticket (130) remains unaffected.,Soft Delete Successful:• conversation_details: is_deleted is 1 for conversation_id = 14000020120251.• ticket_details: Record for ticket_id = 130 is unchanged.
49,Analyze a failed attachment redaction,attachment_redact_info for ticket_id = 49 shows a DB_INSERTION_ERROR and a 403 Forbidden message. This test documents this failure.,1. SELECT * FROM attachment_redact_info WHERE ticket_id = 49;2. SELECT * FROM redaction_request_log WHERE ticket_id = 49;,The logs show a state of PENDING with a response_code of DB_INSERTION_ERROR and a message indicating a 403 error.,Failure Log Verified:• Table attachment_redact_info for id=163: • state: PENDING • response_code: DB_INSERTION_ERROR • retry_attempt_count: 637 • message: Failed to convert image URL to base64: Server returned HTTP response code: 403...
25,Investigate data type mismatch,Ticket 25 has status = 'open' (a string) while all others use integer codes. This is a data integrity issue.,1. SELECT * FROM ticket_details WHERE ticket_id = 25;2. Attempt to UPDATE ticket_details SET status = 'pending' WHERE ticket_id = 25;,"The database stores the string. An update with another string might succeed, indicating a schema vulnerability.",Vulnerability Confirmed:• SELECT query shows status as the string 'open'.• UPDATE query was successful; the column now contains the string 'pending'.• Conclusion: The column lacks a proper integer type constraint.
50,Investigate NULL foreign key,Conversation for ticket 50 has conversation_source = NULL. This is another data integrity issue.,1. SELECT * FROM conversation_details WHERE ticket_id = 50;2. Attempt to INSERT a new conversation for ticket 50 with a NULL source.,The database allows NULL for conversation_source.,Vulnerability Confirmed:• SELECT query on id = 2 shows conversation_source is NULL.• The new INSERT statement with a NULL source succeeded.• Conclusion: The conversation_source column should have a NOT NULL constraint.
800,Create ticket with attachment_on = 'CONVERSATION',All logs show attachment_on = 'TICKET'. Test handling of attachments linked directly to a conversation.,"1. Create a full ticket flow for ticket_id = 800.2. In attachment_redact_info, set attachment_on = 'CONVERSATION'.",The data is inserted successfully.,Record Created:• An attachment record for ticket_id = 800 was created at 2025-09-08 20:08:10.• The attachment_on column correctly displays 'CONVERSATION'.
123,Update a closed ticket,Ticket 123 has status = 4 (likely 'Closed'). Test if the system allows updates.,1. Note status = 4 and version = 2 for ticket_id = 123.2. UPDATE ticket_details SET priority = 1 WHERE ticket_id = 123;,"The UPDATE should succeed, incrementing the version to 3 and updating the timestamp.",Update on Closed Ticket Successful:• priority changed to 1.• version incremented from 2 to 3.• updated_at changed from 2025-09-04 19:56:49 to 2025-09-08 20:08:50.
131,Verify data relationships with multiple conversations,Ticket 131 has multiple conversations. Verify that a JOIN query correctly retrieves all related data.,"1. Execute SELECT t.ticket_id, c.conversation_id, a.raw_attachment_name FROM ticket_details t JOIN conversation_details c ON t.ticket_id = c.ticket_id LEFT JOIN attachment_redact_info a ON c.conversation_id = a.conversation_id WHERE t.ticket_id = 131;",The query should return all conversations for ticket 131 and correctly show which conversation has an associated attachment.,JOIN Verified:Query returned 3 rows:• `131
